// source: DiscountCodes.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

import jspb, { Message, BinaryReader, BinaryWriter } from 'google-protobuf';
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.DiscountCodes.ClearDiscountCodesResponse', null, global);
goog.exportSymbol('proto.DiscountCodes.CreateDiscountCodesRequest', null, global);
goog.exportSymbol('proto.DiscountCodes.CreateDiscountCodesResponse', null, global);
goog.exportSymbol('proto.DiscountCodes.Empty', null, global);
goog.exportSymbol('proto.DiscountCodes.GetDiscountCodeCountResponse', null, global);
goog.exportSymbol('proto.DiscountCodes.GetDiscountCodesRequest', null, global);
goog.exportSymbol('proto.DiscountCodes.GetDiscountCodesResponse', null, global);
goog.exportSymbol('proto.DiscountCodes.UseDiscountCodeRequest', null, global);
goog.exportSymbol('proto.DiscountCodes.UseDiscountCodeResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DiscountCodes.CreateDiscountCodesRequest = function(opt_data) {
  Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DiscountCodes.CreateDiscountCodesRequest, Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DiscountCodes.CreateDiscountCodesRequest.displayName = 'proto.DiscountCodes.CreateDiscountCodesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DiscountCodes.CreateDiscountCodesResponse = function(opt_data) {
  Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DiscountCodes.CreateDiscountCodesResponse, Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DiscountCodes.CreateDiscountCodesResponse.displayName = 'proto.DiscountCodes.CreateDiscountCodesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DiscountCodes.UseDiscountCodeRequest = function(opt_data) {
  Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DiscountCodes.UseDiscountCodeRequest, Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DiscountCodes.UseDiscountCodeRequest.displayName = 'proto.DiscountCodes.UseDiscountCodeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DiscountCodes.UseDiscountCodeResponse = function(opt_data) {
  Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DiscountCodes.UseDiscountCodeResponse, Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DiscountCodes.UseDiscountCodeResponse.displayName = 'proto.DiscountCodes.UseDiscountCodeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DiscountCodes.GetDiscountCodesRequest = function(opt_data) {
  Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DiscountCodes.GetDiscountCodesRequest, Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DiscountCodes.GetDiscountCodesRequest.displayName = 'proto.DiscountCodes.GetDiscountCodesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DiscountCodes.GetDiscountCodesResponse = function(opt_data) {
  Message.initialize(this, opt_data, 0, -1, proto.DiscountCodes.GetDiscountCodesResponse.repeatedFields_, null);
};
goog.inherits(proto.DiscountCodes.GetDiscountCodesResponse, Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DiscountCodes.GetDiscountCodesResponse.displayName = 'proto.DiscountCodes.GetDiscountCodesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DiscountCodes.Empty = function(opt_data) {
  Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DiscountCodes.Empty, Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DiscountCodes.Empty.displayName = 'proto.DiscountCodes.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DiscountCodes.GetDiscountCodeCountResponse = function(opt_data) {
  Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DiscountCodes.GetDiscountCodeCountResponse, Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DiscountCodes.GetDiscountCodeCountResponse.displayName = 'proto.DiscountCodes.GetDiscountCodeCountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.DiscountCodes.ClearDiscountCodesResponse = function(opt_data) {
  Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.DiscountCodes.ClearDiscountCodesResponse, Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.DiscountCodes.ClearDiscountCodesResponse.displayName = 'proto.DiscountCodes.ClearDiscountCodesResponse';
}



if (Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DiscountCodes.CreateDiscountCodesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.DiscountCodes.CreateDiscountCodesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DiscountCodes.CreateDiscountCodesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.CreateDiscountCodesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: Message.getFieldWithDefault(msg, 1, 0),
    length: Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DiscountCodes.CreateDiscountCodesRequest}
 */
proto.DiscountCodes.CreateDiscountCodesRequest.deserializeBinary = function(bytes) {
  var reader = new BinaryReader(bytes);
  var msg = new proto.DiscountCodes.CreateDiscountCodesRequest;
  return proto.DiscountCodes.CreateDiscountCodesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DiscountCodes.CreateDiscountCodesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DiscountCodes.CreateDiscountCodesRequest}
 */
proto.DiscountCodes.CreateDiscountCodesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLength(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DiscountCodes.CreateDiscountCodesRequest.prototype.serializeBinary = function() {
  var writer = new BinaryWriter();
  proto.DiscountCodes.CreateDiscountCodesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DiscountCodes.CreateDiscountCodesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.CreateDiscountCodesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getLength();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 Count = 1;
 * @return {number}
 */
proto.DiscountCodes.CreateDiscountCodesRequest.prototype.getCount = function() {
  return /** @type {number} */ (Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.DiscountCodes.CreateDiscountCodesRequest} returns this
 */
proto.DiscountCodes.CreateDiscountCodesRequest.prototype.setCount = function(value) {
  return Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Length = 2;
 * @return {number}
 */
proto.DiscountCodes.CreateDiscountCodesRequest.prototype.getLength = function() {
  return /** @type {number} */ (Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.DiscountCodes.CreateDiscountCodesRequest} returns this
 */
proto.DiscountCodes.CreateDiscountCodesRequest.prototype.setLength = function(value) {
  return Message.setProto3IntField(this, 2, value);
};





if (Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DiscountCodes.CreateDiscountCodesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.DiscountCodes.CreateDiscountCodesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DiscountCodes.CreateDiscountCodesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.CreateDiscountCodesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DiscountCodes.CreateDiscountCodesResponse}
 */
proto.DiscountCodes.CreateDiscountCodesResponse.deserializeBinary = function(bytes) {
  var reader = new BinaryReader(bytes);
  var msg = new proto.DiscountCodes.CreateDiscountCodesResponse;
  return proto.DiscountCodes.CreateDiscountCodesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DiscountCodes.CreateDiscountCodesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DiscountCodes.CreateDiscountCodesResponse}
 */
proto.DiscountCodes.CreateDiscountCodesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DiscountCodes.CreateDiscountCodesResponse.prototype.serializeBinary = function() {
  var writer = new BinaryWriter();
  proto.DiscountCodes.CreateDiscountCodesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DiscountCodes.CreateDiscountCodesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.CreateDiscountCodesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool Success = 1;
 * @return {boolean}
 */
proto.DiscountCodes.CreateDiscountCodesResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.DiscountCodes.CreateDiscountCodesResponse} returns this
 */
proto.DiscountCodes.CreateDiscountCodesResponse.prototype.setSuccess = function(value) {
  return Message.setProto3BooleanField(this, 1, value);
};





if (Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DiscountCodes.UseDiscountCodeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.DiscountCodes.UseDiscountCodeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DiscountCodes.UseDiscountCodeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.UseDiscountCodeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DiscountCodes.UseDiscountCodeRequest}
 */
proto.DiscountCodes.UseDiscountCodeRequest.deserializeBinary = function(bytes) {
  var reader = new BinaryReader(bytes);
  var msg = new proto.DiscountCodes.UseDiscountCodeRequest;
  return proto.DiscountCodes.UseDiscountCodeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DiscountCodes.UseDiscountCodeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DiscountCodes.UseDiscountCodeRequest}
 */
proto.DiscountCodes.UseDiscountCodeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DiscountCodes.UseDiscountCodeRequest.prototype.serializeBinary = function() {
  var writer = new BinaryWriter();
  proto.DiscountCodes.UseDiscountCodeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DiscountCodes.UseDiscountCodeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.UseDiscountCodeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string Code = 1;
 * @return {string}
 */
proto.DiscountCodes.UseDiscountCodeRequest.prototype.getCode = function() {
  return /** @type {string} */ (Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.DiscountCodes.UseDiscountCodeRequest} returns this
 */
proto.DiscountCodes.UseDiscountCodeRequest.prototype.setCode = function(value) {
  return Message.setProto3StringField(this, 1, value);
};





if (Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DiscountCodes.UseDiscountCodeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.DiscountCodes.UseDiscountCodeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DiscountCodes.UseDiscountCodeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.UseDiscountCodeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    result: Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DiscountCodes.UseDiscountCodeResponse}
 */
proto.DiscountCodes.UseDiscountCodeResponse.deserializeBinary = function(bytes) {
  var reader = new BinaryReader(bytes);
  var msg = new proto.DiscountCodes.UseDiscountCodeResponse;
  return proto.DiscountCodes.UseDiscountCodeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DiscountCodes.UseDiscountCodeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DiscountCodes.UseDiscountCodeResponse}
 */
proto.DiscountCodes.UseDiscountCodeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DiscountCodes.UseDiscountCodeResponse.prototype.serializeBinary = function() {
  var writer = new BinaryWriter();
  proto.DiscountCodes.UseDiscountCodeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DiscountCodes.UseDiscountCodeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.UseDiscountCodeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResult();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 Result = 1;
 * @return {number}
 */
proto.DiscountCodes.UseDiscountCodeResponse.prototype.getResult = function() {
  return /** @type {number} */ (Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.DiscountCodes.UseDiscountCodeResponse} returns this
 */
proto.DiscountCodes.UseDiscountCodeResponse.prototype.setResult = function(value) {
  return Message.setProto3IntField(this, 1, value);
};





if (Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DiscountCodes.GetDiscountCodesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.DiscountCodes.GetDiscountCodesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DiscountCodes.GetDiscountCodesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.GetDiscountCodesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    skip: Message.getFieldWithDefault(msg, 1, 0),
    take: Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DiscountCodes.GetDiscountCodesRequest}
 */
proto.DiscountCodes.GetDiscountCodesRequest.deserializeBinary = function(bytes) {
  var reader = new BinaryReader(bytes);
  var msg = new proto.DiscountCodes.GetDiscountCodesRequest;
  return proto.DiscountCodes.GetDiscountCodesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DiscountCodes.GetDiscountCodesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DiscountCodes.GetDiscountCodesRequest}
 */
proto.DiscountCodes.GetDiscountCodesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSkip(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTake(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DiscountCodes.GetDiscountCodesRequest.prototype.serializeBinary = function() {
  var writer = new BinaryWriter();
  proto.DiscountCodes.GetDiscountCodesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DiscountCodes.GetDiscountCodesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.GetDiscountCodesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSkip();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTake();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 Skip = 1;
 * @return {number}
 */
proto.DiscountCodes.GetDiscountCodesRequest.prototype.getSkip = function() {
  return /** @type {number} */ (Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.DiscountCodes.GetDiscountCodesRequest} returns this
 */
proto.DiscountCodes.GetDiscountCodesRequest.prototype.setSkip = function(value) {
  return Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Take = 2;
 * @return {number}
 */
proto.DiscountCodes.GetDiscountCodesRequest.prototype.getTake = function() {
  return /** @type {number} */ (Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.DiscountCodes.GetDiscountCodesRequest} returns this
 */
proto.DiscountCodes.GetDiscountCodesRequest.prototype.setTake = function(value) {
  return Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.DiscountCodes.GetDiscountCodesResponse.repeatedFields_ = [2];



if (Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DiscountCodes.GetDiscountCodesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.DiscountCodes.GetDiscountCodesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DiscountCodes.GetDiscountCodesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.GetDiscountCodesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: Message.getFieldWithDefault(msg, 1, 0),
    codesList: (f = Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DiscountCodes.GetDiscountCodesResponse}
 */
proto.DiscountCodes.GetDiscountCodesResponse.deserializeBinary = function(bytes) {
  var reader = new BinaryReader(bytes);
  var msg = new proto.DiscountCodes.GetDiscountCodesResponse;
  return proto.DiscountCodes.GetDiscountCodesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DiscountCodes.GetDiscountCodesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DiscountCodes.GetDiscountCodesResponse}
 */
proto.DiscountCodes.GetDiscountCodesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addCodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DiscountCodes.GetDiscountCodesResponse.prototype.serializeBinary = function() {
  var writer = new BinaryWriter();
  proto.DiscountCodes.GetDiscountCodesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DiscountCodes.GetDiscountCodesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.GetDiscountCodesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCodesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional uint32 Count = 1;
 * @return {number}
 */
proto.DiscountCodes.GetDiscountCodesResponse.prototype.getCount = function() {
  return /** @type {number} */ (Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.DiscountCodes.GetDiscountCodesResponse} returns this
 */
proto.DiscountCodes.GetDiscountCodesResponse.prototype.setCount = function(value) {
  return Message.setProto3IntField(this, 1, value);
};


/**
 * repeated string Codes = 2;
 * @return {!Array<string>}
 */
proto.DiscountCodes.GetDiscountCodesResponse.prototype.getCodesList = function() {
  return /** @type {!Array<string>} */ (Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.DiscountCodes.GetDiscountCodesResponse} returns this
 */
proto.DiscountCodes.GetDiscountCodesResponse.prototype.setCodesList = function(value) {
  return Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.DiscountCodes.GetDiscountCodesResponse} returns this
 */
proto.DiscountCodes.GetDiscountCodesResponse.prototype.addCodes = function(value, opt_index) {
  return Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.DiscountCodes.GetDiscountCodesResponse} returns this
 */
proto.DiscountCodes.GetDiscountCodesResponse.prototype.clearCodesList = function() {
  return this.setCodesList([]);
};





if (Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DiscountCodes.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.DiscountCodes.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DiscountCodes.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DiscountCodes.Empty}
 */
proto.DiscountCodes.Empty.deserializeBinary = function(bytes) {
  var reader = new BinaryReader(bytes);
  var msg = new proto.DiscountCodes.Empty;
  return proto.DiscountCodes.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DiscountCodes.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DiscountCodes.Empty}
 */
proto.DiscountCodes.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DiscountCodes.Empty.prototype.serializeBinary = function() {
  var writer = new BinaryWriter();
  proto.DiscountCodes.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DiscountCodes.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DiscountCodes.GetDiscountCodeCountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.DiscountCodes.GetDiscountCodeCountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DiscountCodes.GetDiscountCodeCountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.GetDiscountCodeCountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DiscountCodes.GetDiscountCodeCountResponse}
 */
proto.DiscountCodes.GetDiscountCodeCountResponse.deserializeBinary = function(bytes) {
  var reader = new BinaryReader(bytes);
  var msg = new proto.DiscountCodes.GetDiscountCodeCountResponse;
  return proto.DiscountCodes.GetDiscountCodeCountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DiscountCodes.GetDiscountCodeCountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DiscountCodes.GetDiscountCodeCountResponse}
 */
proto.DiscountCodes.GetDiscountCodeCountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DiscountCodes.GetDiscountCodeCountResponse.prototype.serializeBinary = function() {
  var writer = new BinaryWriter();
  proto.DiscountCodes.GetDiscountCodeCountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DiscountCodes.GetDiscountCodeCountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.GetDiscountCodeCountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 Count = 1;
 * @return {number}
 */
proto.DiscountCodes.GetDiscountCodeCountResponse.prototype.getCount = function() {
  return /** @type {number} */ (Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.DiscountCodes.GetDiscountCodeCountResponse} returns this
 */
proto.DiscountCodes.GetDiscountCodeCountResponse.prototype.setCount = function(value) {
  return Message.setProto3IntField(this, 1, value);
};





if (Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.DiscountCodes.ClearDiscountCodesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.DiscountCodes.ClearDiscountCodesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.DiscountCodes.ClearDiscountCodesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.ClearDiscountCodesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.DiscountCodes.ClearDiscountCodesResponse}
 */
proto.DiscountCodes.ClearDiscountCodesResponse.deserializeBinary = function(bytes) {
  var reader = new BinaryReader(bytes);
  var msg = new proto.DiscountCodes.ClearDiscountCodesResponse;
  return proto.DiscountCodes.ClearDiscountCodesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.DiscountCodes.ClearDiscountCodesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.DiscountCodes.ClearDiscountCodesResponse}
 */
proto.DiscountCodes.ClearDiscountCodesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.DiscountCodes.ClearDiscountCodesResponse.prototype.serializeBinary = function() {
  var writer = new BinaryWriter();
  proto.DiscountCodes.ClearDiscountCodesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.DiscountCodes.ClearDiscountCodesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.DiscountCodes.ClearDiscountCodesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool Success = 1;
 * @return {boolean}
 */
proto.DiscountCodes.ClearDiscountCodesResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.DiscountCodes.ClearDiscountCodesResponse} returns this
 */
proto.DiscountCodes.ClearDiscountCodesResponse.prototype.setSuccess = function(value) {
  return Message.setProto3BooleanField(this, 1, value);
};


goog.object.extend(exports, proto.DiscountCodes);
